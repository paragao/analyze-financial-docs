AWSTemplateFormatVersion: '2010-09-09'

Description: 'Stack to setup environment for Textract-Comprehend workshop'

## FOR EE MODIFY ACCORDINGLY AND UPLOAD YOUR FUNCTION CODE TO THE ASSETS BUCKET PREVIOUSLY
Parameters: 
  BucketLambda: 
    Type: String
  ComprehendLambdaKey: 
    Type: String
  TextractLambdaKey:
    Type: String 

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: "Source bucket for lambda functions"
        Parameters:
          - BucketLambda
          - ComprehendLambdaKey
          - TextractLambdaKey
    ParameterLabels:
      BucketLambda:
        default: "Bucket name where your AWS Lambda functions zip files are stored in"
      ComprehendLambdaKey:
        default: "The Key (with prefix) for the Comprehend function"
      TextractLambdaKey:
        default: "The Key (with prefix) for the Textract function"

Resources:
  InputS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Join
        - "-"
        - - "workshop-textract"
          - !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]]]
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: 'LambdaExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement: 
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogGroup'
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action: 
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*      
        - PolicyName: 'AllowS3GetPut'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - s3:Get*
                - s3:Put*
              Resource: !Sub arn:${AWS::Partition}:s3:::${InputS3Bucket}/*
        - PolicyName: 'Textract-and-Comprehend'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - textract:*
                - comprehend:*
              Resource: 
                - !Sub arn:${AWS::Partition}:textract:${AWS::Region}:${AWS::AccountId}:*
                - !Sub arn:${AWS::Partition}:comprehend:${AWS::Region}:${AWS::AccountId}:*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  TextractAnalysis:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function in charge of launching Textract
      FunctionName: !Join
        - "-"
        - - "textract-analysis"
          - !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]]]
      Handler: textract.handler
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.7
      Timeout: 120
      Environment: 
        Variables:
          TOPIC_ARN: !Ref TextractAsyncTopic
          ROLE_ARN: !GetAtt TextractServiceLinkedRole.Arn 
      Code: 
        S3Bucket: !Ref BucketLambda
        S3Key: !Ref TextractLambdaKey
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  ## REQUIRE TOPIC FOR ASYNC OPERATION --- REALLY??????? Double Check!
  TextractAsyncTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: TextractWorkshop
      TopicName: TextractWorkshop
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  ## REQUIRE SERVICE LINKED ROLE FOR ASYNC OPERATION
  TextractServiceLinkedRole:
    Type: AWS::IAM::Role 
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - textract.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"        
      Policies:
        - PolicyName: 'TextractServiceRole'
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:AmazonTextract*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  DataRoleArn:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - comprehend.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: 'ComprehendServiceLinkedRole'
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::*Comprehend*
                  - !Sub arn:${AWS::Partition}:s3:::*comprehend*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  ComprehendAnalysis:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function in charge of launching Comprehend
      FunctionName: !Join
        - "-"
        - - "comprehend-analysis"
          - !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]]]
      Handler: comprehend.handler
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.7
      Timeout: 120
      Environment:
        Variables:
          DATA_ROLE_ARN: !GetAtt DataRoleArn.Arn 
      Code: 
        S3Bucket: !Ref BucketLambda
        S3Key: !Ref ComprehendLambdaKey
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

Outputs:
  InputS3Bucket:
    Description: Name of the input bucket
    Value: !Ref InputS3Bucket
  DocumentTextractFunction:
    Description: Function that will be triggered when a document is uploaded in the input bucket
    Value: !Ref TextractAnalysis
  DocumentComprehedFunction: 
    Description: Function that will be triggered when a document is uploaded in the input bucket 
    Value: !Ref ComprehendAnalysis

